{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/dev/React/src/components/Show.js\";\nimport React, { Component } from 'react';\nimport Backdrop from './Backdrop';\nimport MovieContent from './MovieContent';\nimport '../css/Show.css';\n\nclass Show extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: ''\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    var mediaType = undefined;\n\n    if (window.location.href.includes(\"movie\")) {\n      mediaType = \"movie\";\n    } else {\n      mediaType = \"tv\";\n    }\n\n    fetch(`https://api.themoviedb.org/3/${mediaType}/${id}?api_key=6ed12e064b90ae1290fa326ce9e790ff&language=en-US`).then(response => {\n      return response.json();\n    }).then(data => {\n      let url = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/\";\n      let poster = url + data.poster_path;\n      let backdrop = \"https://image.tmdb.org/t/p/w780/\" + data.backdrop_path;\n\n      function movieLength(data) {\n        const hours = Math.floor(data.runtime / 60);\n        const minutes = data.runtime % 60;\n        let runtime = undefined;\n\n        if (data.number_of_seasons != null) {\n          const hours = Math.floor(data.runtime / 60);\n          const minutes = data.runtime % 60;\n          runtime = `${hours}h ${minutes}min`;\n        } else {\n          debugger;\n          runtime = `${data.number_of_seasons} Seasons`;\n        }\n\n        return runtime;\n      }\n\n      let release_date = \"Unknown\";\n\n      if (data.release_date !== undefined) {\n        release_date = data.release_date.split(\"-\")[0];\n      }\n\n      let element = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ShowMovie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Backdrop, {\n        history: this.props.history,\n        backdrop: backdrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(MovieContent, {\n        poster: poster,\n        title: data.original_title,\n        releaseDate: release_date,\n        voteAverage: data.vote_average * 10,\n        movieLength: movieLength(data),\n        overview: data.overview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }));\n      this.setState({\n        movie: element\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, this.state.movie);\n  }\n\n}\n\nexport default Show;","map":{"version":3,"sources":["/Users/matt/Desktop/dev/React/src/components/Show.js"],"names":["React","Component","Backdrop","MovieContent","Show","constructor","props","state","movie","componentDidMount","id","match","params","mediaType","undefined","window","location","href","includes","fetch","then","response","json","data","url","poster","poster_path","backdrop","backdrop_path","movieLength","hours","Math","floor","runtime","minutes","number_of_seasons","release_date","split","element","history","original_title","vote_average","overview","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Backdrop from './Backdrop';\nimport MovieContent from './MovieContent';\nimport '../css/Show.css'\n\nclass Show extends Component {\n  constructor (props){\n  super(props);\n  this.state = {\n    movie: ''\n  };\n}\n\ncomponentDidMount() {\n\n  let id = this.props.match.params.id;\n  var mediaType = undefined;\n  if(window.location.href.includes(\"movie\")){\n    mediaType = \"movie\"\n  } else {\n    mediaType = \"tv\"\n  }\n  \n  fetch(`https://api.themoviedb.org/3/${mediaType}/${id}?api_key=6ed12e064b90ae1290fa326ce9e790ff&language=en-US`)\n    .then(response => {      \n      return response.json();\n    })\n    .then( (data) => {\n        let url = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/\";\n        let poster = url + data.poster_path;\n        let backdrop = \"https://image.tmdb.org/t/p/w780/\" + data.backdrop_path;\n        \n        function movieLength(data)\n          {\n            const hours = Math.floor(data.runtime / 60);\n            const minutes = data.runtime % 60;\n            let runtime = undefined;\n            \n            if(data.number_of_seasons != null){\n              const hours = Math.floor(data.runtime / 60);\n              const minutes = data.runtime % 60;\n              runtime = `${hours}h ${minutes}min`;\n            } else {\n              debugger\n              runtime = `${data.number_of_seasons} Seasons`\n            }\n            return runtime\n          }\n\n        let release_date = \"Unknown\";\n        \n        if (data.release_date !== undefined){\n          release_date = data.release_date.split(\"-\")[0]\n        }\n        \n        let element = (\n          <div className=\"ShowMovie\">\n            <Backdrop history={this.props.history}\n                      backdrop={backdrop}/>\n                    \n            <MovieContent poster={poster}\n                     title={data.original_title}\n                     releaseDate={release_date}\n                     voteAverage={data.vote_average * 10}\n                     movieLength={movieLength(data)}\n                     overview={data.overview}\n            />\n          </div>\n        )\n      this.setState({ movie: element })\n      })\n    }\n\n  render() {\n    return(\n      <div>\n        {this.state.movie}\n      </div>\n    )\n  }\n}\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}